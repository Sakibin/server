{"version":3,"sources":["../src/index.ts","../node_modules/camelcase/index.js","../node_modules/is-regexp/index.js","../node_modules/is-obj/index.js","../../../node_modules/get-own-enumerable-keys/index.js","../node_modules/stringify-object/index.js"],"sourcesContent":["import type { ReducedHelperObject } from '@readme/httpsnippet/helpers/reducer';\nimport type { Client, ClientPlugin } from '@readme/httpsnippet/targets';\nimport type { Operation } from 'oas/operation';\nimport type { HttpMethods, OASDocument } from 'oas/types';\n\nimport { CodeBuilder } from '@readme/httpsnippet/helpers/code-builder';\nimport camelCase from 'camelcase'; // eslint-disable-line import/no-extraneous-dependencies\nimport contentType from 'content-type';\nimport Oas from 'oas';\nimport { matchesMimeType } from 'oas/utils';\nimport { isReservedOrBuiltinsLC } from 'reserved2';\nimport stringifyObject from 'stringify-object'; // eslint-disable-line import/no-extraneous-dependencies\n\n/**\n * @note This regex also exists in `api/fetcher`.\n *\n * @example @petstore/v1.0#n6kvf10vakpemvplx\n * @example @petstore#n6kvf10vakpemvplx\n */\nconst registryUUIDRegex = /^@(?<project>[a-zA-Z0-9-_]+)(\\/?(?<version>.+))?#(?<uuid>[a-z0-9]+)$/;\n\n/**\n * @note This function also exists in `api/fetcher`.\n */\nfunction getProjectPrefixFromRegistryUUID(uri: string) {\n  const matches = uri.match(registryUUIDRegex);\n  if (!matches) {\n    return undefined;\n  }\n\n  return matches.groups?.project;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction stringify(obj: any, opts = {}) {\n  return stringifyObject(obj, { indent: '  ', ...opts });\n}\n\nfunction buildAuthSnippet(sdkVariable: string, authKey: string | string[]) {\n  // Auth key will be an array for Basic auth cases.\n  if (Array.isArray(authKey)) {\n    const auth: string[] = [];\n    authKey.forEach((token, i) => {\n      // If the token part is the last part of the key and it's empty, don't add it to the snippet.\n      if (token.length === 0 && authKey.length > 1 && i === authKey.length - 1) {\n        return;\n      }\n\n      auth.push(`'${token.replace(/'/g, \"\\\\'\")}'`);\n    });\n\n    return `${sdkVariable}.auth(${auth.join(', ')});`;\n  }\n\n  return `${sdkVariable}.auth('${authKey.replace(/'/g, \"\\\\'\")}');`;\n}\n\nfunction getAuthSources(operation: Operation) {\n  const matchers: { cookie: string[]; header: Record<string, string>; query: string[] } = {\n    header: {},\n    query: [],\n    cookie: [],\n  };\n\n  if (operation.getSecurity().length === 0) {\n    return matchers;\n  }\n\n  Object.entries(operation.prepareSecurity()).forEach(([, schemes]) => {\n    schemes.forEach(scheme => {\n      if (scheme.type === 'http') {\n        if (scheme.scheme === 'basic') {\n          matchers.header.authorization = 'Basic';\n        } else if (scheme.scheme === 'bearer') {\n          matchers.header.authorization = 'Bearer';\n        }\n      } else if (scheme.type === 'oauth2') {\n        matchers.header.authorization = 'Bearer';\n      } else if (scheme.type === 'apiKey') {\n        if (scheme.in === 'query') {\n          matchers.query.push(scheme.name);\n        } else if (scheme.in === 'header') {\n          // The way that this asterisk header matcher works is that since this `apiKey` goes in a\n          // named header (`scheme.name`) because the header is the key, we're matching against the\n          // entire header -- counter to the way that the HTTP basic matcher above works where we\n          // match and extract the API key from everything after `Basic ` in the `Authorization`\n          // header.\n          matchers.header[scheme.name.toLowerCase()] = '*';\n        } else if (scheme.in === 'cookie') {\n          matchers.cookie.push(scheme.name);\n        }\n      }\n    });\n  });\n\n  return matchers;\n}\n\ninterface APIOptions {\n  api: {\n    definition: OASDocument;\n\n    /**\n     * The string to identify this SDK as. This is used in the `import sdk from '<identifier>'`\n     * sample as well as the the variable name we attach the SDK to.\n     *\n     * @example `@api/developers`\n     */\n    identifier?: string;\n\n    /**\n     * The URI that is used to download this API definition from `npx api install`.\n     *\n     * @example `@developers/v2.0#17273l2glm9fq4l5`\n     */\n    registryURI: string;\n  };\n  escapeBrackets?: boolean;\n  indent?: string | false;\n}\n\nconst client: Client<APIOptions> = {\n  info: {\n    key: 'api',\n    title: 'API',\n    link: 'https://npm.im/api',\n    description: 'Automatic SDK generation from an OpenAPI definition.',\n    extname: '.js',\n    installation: 'npx api install {packageName}',\n  },\n  convert: ({ cookiesObj, headersObj, postData, queryObj, url, ...source }, options) => {\n    const opts = {\n      ...options,\n    } as APIOptions;\n\n    if (!opts?.api) {\n      throw new Error('This HTTPSnippet client must have an `api` config supplied to it.');\n    } else if (!opts?.api?.definition) {\n      throw new Error('This HTTPSnippet client must have an `api.definition` option supplied to it.');\n    } else if (!opts?.api?.registryURI) {\n      throw new Error('This HTTPSnippet client must have an `api.registryURI` option supplied to it.');\n    }\n\n    const method = source.method.toLowerCase() as HttpMethods;\n    const oas = new Oas(opts.api.definition);\n    const apiDefinition = oas.getDefinition();\n    const foundOperation = oas.findOperation(url, method);\n    if (!foundOperation) {\n      throw new Error(\n        `Unable to locate a matching operation in the supplied \\`api.definition\\` for: ${source.method} ${url}`,\n      );\n    }\n\n    let sdkPackageName;\n    let sdkVariable: string;\n    if (opts.api.identifier) {\n      sdkPackageName = opts.api.identifier;\n\n      sdkVariable = camelCase(opts.api.identifier);\n      if (isReservedOrBuiltinsLC(sdkVariable)) {\n        // If this identifier is a reserved JS word then we should prefix it with an underscore so\n        // this snippet can be valid code.\n        sdkVariable = `_${sdkVariable}`;\n      }\n    } else {\n      sdkPackageName = getProjectPrefixFromRegistryUUID(opts.api.registryURI);\n      sdkVariable = 'sdk';\n    }\n\n    const operationSlugs = foundOperation.url.slugs;\n    const operation = oas.operation(foundOperation.url.nonNormalizedPath, method);\n    const operationPathParameters = operation.getParameters().filter(param => param.in === 'path');\n    const path = operation.path;\n    const authData: string[] = [];\n    const authSources = getAuthSources(operation);\n\n    const { blank, push, join } = new CodeBuilder({ indent: opts.indent || '  ' });\n\n    push(`import ${sdkVariable} from '@api/${sdkPackageName}';`);\n    blank();\n\n    // If we have multiple servers configured and our source URL differs from the stock URL that we\n    // receive from our `oas` library then the URL either has server variables contained in it (that\n    // don't match the defaults), or the OAS offers alternate server URLs and we should expose that\n    // in the generated snippet.\n    const configData = [];\n    if ((apiDefinition.servers || []).length > 1) {\n      const stockUrl = oas.url();\n      const baseUrl = url.replace(path, '');\n      if (baseUrl !== stockUrl) {\n        const serverVars = oas.splitVariables(baseUrl);\n        const serverUrl = serverVars ? oas.url(serverVars.selected, serverVars.variables) : baseUrl;\n\n        configData.push(`sdk.server('${serverUrl}');`);\n      }\n    }\n\n    let metadata: Record<string, string | string[]> = {};\n    Object.keys(queryObj).forEach(param => {\n      if (authSources.query.includes(param)) {\n        authData.push(buildAuthSnippet(sdkVariable, queryObj[param]));\n\n        // If this query param is part of an auth source then we don't want it doubled up in the\n        // snippet.\n        return;\n      }\n\n      metadata[param] = queryObj[param];\n    });\n\n    Object.keys(cookiesObj).forEach(cookie => {\n      if (authSources.cookie.includes(cookie)) {\n        authData.push(buildAuthSnippet(sdkVariable, cookiesObj[cookie]));\n\n        // If this cookie is part of an auth source then we don't want it doubled up.\n        return;\n      }\n\n      // Note that we may have the potential to overlap any cookie that also shares the name as\n      // another metadata parameter. This problem is currently inherent to `api` and not this\n      // snippet generator.\n      metadata[cookie] = cookiesObj[cookie];\n    });\n\n    // If we have path parameters present we should add them into the metadata object.\n    Array.from(Object.entries(operationSlugs)).forEach(([param, value]) => {\n      // The keys in `operationSlugs` will always be prefixed with a `:` in the `oas` library so\n      // we can safely do this substring here without asserting this context.\n      const cleanedParam = param.substring(1);\n\n      // If our incoming path slug out of `oas.findOperation()` has been sanitized and is missing\n      // a hyphen, but there is a parameter in the OpenAPI definition that matches what our\n      // hyphen-less slug is then we should use that for the snippet.\n      const unsanitizedParam = operationPathParameters.find(p => {\n        return p.name.includes('-') && p.name.replace(/-/g, '') === cleanedParam ? p.name : false;\n      });\n\n      if (unsanitizedParam) {\n        metadata[unsanitizedParam.name] = value;\n      } else {\n        metadata[cleanedParam] = value;\n      }\n    });\n\n    if (Object.keys(headersObj).length) {\n      const headers = headersObj;\n      const requestHeaders: ReducedHelperObject = {};\n\n      Object.keys(headers).forEach(header => {\n        // Headers in HTTPSnippet are case-insensitive so we need to add in some special handling to\n        // make sure we're able to match them properly.\n        const headerLower = header.toLowerCase();\n\n        if (headerLower in authSources.header) {\n          // If this header has been set up as an authentication header, let's remove it and add it\n          // into our auth data so we can build up an `.auth()` snippet for the SDK.\n          const authScheme = authSources.header[headerLower];\n          if (authScheme === '*') {\n            authData.push(buildAuthSnippet(sdkVariable, headers[header]));\n          } else {\n            // @ts-expect-error `headers[header]` is typed improperly in HTTPSnippet.\n            let authKey = headers[header].replace(`${authSources.header[headerLower]} `, '');\n            if (authScheme.toLowerCase() === 'basic') {\n              authKey = Buffer.from(authKey, 'base64').toString('ascii');\n              authKey = authKey.split(':');\n            }\n\n            authData.push(buildAuthSnippet(sdkVariable, authKey));\n          }\n\n          delete headers[header];\n          return;\n        } else if (headerLower === 'content-type') {\n          // `Content-Type` headers are automatically added within the SDK so we can filter them out\n          // if they don't have parameters attached to them.\n          // @ts-expect-error `headers[header]` is typed improperly in HTTPSnippet.\n          const parsedContentType = contentType.parse(headers[header]);\n          if (!Object.keys(parsedContentType.parameters).length) {\n            delete headers[header];\n            return;\n          }\n        } else if (headerLower === 'accept') {\n          // If the `Accept` header here is JSON-like header then we can remove it from the code\n          // snippet because `api` natively supports and prioritizes JSON over any other mime type.\n          if (matchesMimeType.json(headers[header] as string)) {\n            delete headers[header];\n            return;\n          }\n        }\n\n        // If we haven't used our header anywhere else, or we've deleted it from the payload\n        // because it'll be handled internally by `api` then we should add it into our code snippet.\n        if (['accept', 'content-type'].includes(headerLower)) {\n          requestHeaders[headerLower] = headers[header];\n        } else {\n          // Non-reserved headers retain their casing because we want to generate a snippet that\n          // matches the TS types that are created during codegeneration.\n          requestHeaders[header] = headers[header];\n        }\n      });\n\n      if (Object.keys(requestHeaders).length > 0) {\n        metadata = Object.assign(metadata, requestHeaders);\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let body: any;\n    switch (postData.mimeType) {\n      case 'application/x-www-form-urlencoded':\n        body = postData.paramsObj;\n        break;\n\n      case 'application/json':\n        if (postData.jsonObj) {\n          body = postData.jsonObj;\n        }\n        break;\n\n      case 'multipart/form-data':\n        if (postData.params) {\n          body = {};\n\n          // If there's a `Content-Type` header present in the metadata, but it's for the\n          // `multipart/form-data` request then dump it off the snippet. We shouldn't offload that\n          // unnecessary bloat of multipart boundaries to the user, instead letting the SDK handle it\n          // automatically.\n          if ('content-type' in metadata && metadata['content-type'].indexOf('multipart/form-data') === 0) {\n            delete metadata['content-type'];\n          }\n\n          postData.params.forEach(param => {\n            if (param.fileName) {\n              body[param.name] = param.fileName;\n            } else {\n              body[param.name] = param.value;\n            }\n          });\n        }\n        break;\n\n      default:\n        if (postData.text) {\n          body = postData.text;\n        }\n    }\n\n    const args = [];\n\n    const accessor = operation.getOperationId({ camelCase: true });\n\n    // If we're going to be rendering out body params and metadata we should cut their character\n    // limit in half because we'll be rendering them in their own lines.\n    const inlineCharacterLimit = typeof body !== 'undefined' && Object.keys(metadata).length > 0 ? 40 : 80;\n    if (typeof body !== 'undefined') {\n      args.push(stringify(body, { inlineCharacterLimit }));\n    }\n\n    if (Object.keys(metadata).length > 0) {\n      args.push(stringify(metadata, { inlineCharacterLimit }));\n    }\n\n    if (authData.length) {\n      push(authData.join('\\n'));\n    }\n\n    if (configData.length) {\n      push(configData.join('\\n'));\n    }\n\n    push(`${sdkVariable}.${accessor}(${args.join(', ')})`);\n    push('.then(({ data }) => console.log(data))', 1);\n    push('.catch(err => console.error(err));', 1);\n\n    return join();\n  },\n};\n\nconst plugin: ClientPlugin<APIOptions> = {\n  target: 'node',\n  client,\n};\n\nexport default plugin;\n","const UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase, preserveConsecutiveUppercase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\tlet isLastLastCharPreserved = false;\n\n\tfor (let index = 0; index < string.length; index++) {\n\t\tconst character = string[index];\n\t\tisLastLastCharPreserved = index > 2 ? string[index - 3] === '-' : true;\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, index) + '-' + string.slice(index);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\tindex++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character) && (!isLastLastCharPreserved || preserveConsecutiveUppercase)) {\n\t\t\tstring = string.slice(0, index - 1) + '-' + string.slice(index - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replaceAll(LEADING_CAPITAL, match => toLowerCase(match));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input\n\t\t.replaceAll(NUMBERS_AND_IDENTIFIER, (match, pattern, offset) => ['_', '-'].includes(input.charAt(offset + match.length)) ? match : toUpperCase(match))\n\t\t.replaceAll(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier));\n};\n\nexport default function camelCase(input, options) {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options,\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false\n\t\t? string => string.toLowerCase()\n\t\t: string => string.toLocaleLowerCase(options.locale);\n\n\tconst toUpperCase = options.locale === false\n\t\t? string => string.toUpperCase()\n\t\t: string => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\tif (SEPARATORS.test(input)) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase, options.preserveConsecutiveUppercase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\tinput = options.preserveConsecutiveUppercase ? preserveConsecutiveUppercase(input, toLowerCase) : toLowerCase(input);\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n}\n","const {toString} = Object.prototype;\n\nexport default function isRegexp(value) {\n\treturn toString.call(value) === '[object RegExp]';\n}\n","export default function isObject(value) {\n\tconst type = typeof value;\n\treturn value !== null && (type === 'object' || type === 'function');\n}\n","const {propertyIsEnumerable} = Object.prototype;\n\nexport default function getOwnEnumerableKeys(object) {\n\treturn [\n\t\t...Object.keys(object),\n\t\t...Object.getOwnPropertySymbols(object)\n\t\t\t.filter(key => propertyIsEnumerable.call(object, key)),\n\t];\n}\n","import isRegexp from 'is-regexp';\nimport isObject from 'is-obj';\nimport getOwnEnumerableKeys from 'get-own-enumerable-keys';\n\nexport default function stringifyObject(input, options, pad) {\n\tconst seen = [];\n\n\treturn (function stringify(input, options = {}, pad = '') {\n\t\tconst indent = options.indent || '\\t';\n\n\t\tlet tokens;\n\t\tif (options.inlineCharacterLimit === undefined) {\n\t\t\ttokens = {\n\t\t\t\tnewline: '\\n',\n\t\t\t\tnewlineOrSpace: '\\n',\n\t\t\t\tpad,\n\t\t\t\tindent: pad + indent,\n\t\t\t};\n\t\t} else {\n\t\t\ttokens = {\n\t\t\t\tnewline: '@@__STRINGIFY_OBJECT_NEW_LINE__@@',\n\t\t\t\tnewlineOrSpace: '@@__STRINGIFY_OBJECT_NEW_LINE_OR_SPACE__@@',\n\t\t\t\tpad: '@@__STRINGIFY_OBJECT_PAD__@@',\n\t\t\t\tindent: '@@__STRINGIFY_OBJECT_INDENT__@@',\n\t\t\t};\n\t\t}\n\n\t\tconst expandWhiteSpace = string => {\n\t\t\tif (options.inlineCharacterLimit === undefined) {\n\t\t\t\treturn string;\n\t\t\t}\n\n\t\t\tconst oneLined = string\n\t\t\t\t.replace(new RegExp(tokens.newline, 'g'), '')\n\t\t\t\t.replace(new RegExp(tokens.newlineOrSpace, 'g'), ' ')\n\t\t\t\t.replace(new RegExp(tokens.pad + '|' + tokens.indent, 'g'), '');\n\n\t\t\tif (oneLined.length <= options.inlineCharacterLimit) {\n\t\t\t\treturn oneLined;\n\t\t\t}\n\n\t\t\treturn string\n\t\t\t\t.replace(new RegExp(tokens.newline + '|' + tokens.newlineOrSpace, 'g'), '\\n')\n\t\t\t\t.replace(new RegExp(tokens.pad, 'g'), pad)\n\t\t\t\t.replace(new RegExp(tokens.indent, 'g'), pad + indent);\n\t\t};\n\n\t\tif (seen.includes(input)) {\n\t\t\treturn '\"[Circular]\"';\n\t\t}\n\n\t\tif (\n\t\t\tinput === null\n\t\t\t|| input === undefined\n\t\t\t|| typeof input === 'number'\n\t\t\t|| typeof input === 'boolean'\n\t\t\t|| typeof input === 'function'\n\t\t\t|| typeof input === 'symbol'\n\t\t\t|| isRegexp(input)\n\t\t) {\n\t\t\treturn String(input);\n\t\t}\n\n\t\tif (input instanceof Date) {\n\t\t\treturn `new Date('${input.toISOString()}')`;\n\t\t}\n\n\t\tif (Array.isArray(input)) {\n\t\t\tif (input.length === 0) {\n\t\t\t\treturn '[]';\n\t\t\t}\n\n\t\t\tseen.push(input);\n\n\t\t\tconst returnValue = '[' + tokens.newline + input.map((element, i) => {\n\t\t\t\tconst eol = input.length - 1 === i ? tokens.newline : ',' + tokens.newlineOrSpace;\n\n\t\t\t\tlet value = stringify(element, options, pad + indent);\n\t\t\t\tif (options.transform) {\n\t\t\t\t\tvalue = options.transform(input, i, value);\n\t\t\t\t}\n\n\t\t\t\treturn tokens.indent + value + eol;\n\t\t\t}).join('') + tokens.pad + ']';\n\n\t\t\tseen.pop();\n\n\t\t\treturn expandWhiteSpace(returnValue);\n\t\t}\n\n\t\tif (isObject(input)) {\n\t\t\tlet objectKeys = getOwnEnumerableKeys(input);\n\n\t\t\tif (options.filter) {\n\t\t\t\t// eslint-disable-next-line unicorn/no-array-callback-reference, unicorn/no-array-method-this-argument\n\t\t\t\tobjectKeys = objectKeys.filter(element => options.filter(input, element));\n\t\t\t}\n\n\t\t\tif (objectKeys.length === 0) {\n\t\t\t\treturn '{}';\n\t\t\t}\n\n\t\t\tseen.push(input);\n\n\t\t\tconst returnValue = '{' + tokens.newline + objectKeys.map((element, index) => {\n\t\t\t\tconst eol = objectKeys.length - 1 === index ? tokens.newline : ',' + tokens.newlineOrSpace;\n\t\t\t\tconst isSymbol = typeof element === 'symbol';\n\t\t\t\tconst isClassic = !isSymbol && /^[a-z$_][$\\w]*$/i.test(element);\n\t\t\t\tconst key = isSymbol || isClassic ? element : stringify(element, options);\n\n\t\t\t\tlet value = stringify(input[element], options, pad + indent);\n\t\t\t\tif (options.transform) {\n\t\t\t\t\tvalue = options.transform(input, element, value);\n\t\t\t\t}\n\n\t\t\t\treturn tokens.indent + String(key) + ': ' + value + eol;\n\t\t\t}).join('') + tokens.pad + '}';\n\n\t\t\tseen.pop();\n\n\t\t\treturn expandWhiteSpace(returnValue);\n\t\t}\n\n\t\tinput = input.replace(/\\\\/g, '\\\\\\\\');\n\t\tinput = String(input).replace(/[\\r\\n]/g, x => x === '\\n' ? '\\\\n' : '\\\\r');\n\n\t\tif (options.singleQuotes === false) {\n\t\t\tinput = input.replace(/\"/g, '\\\\\"');\n\t\t\treturn `\"${input}\"`;\n\t\t}\n\n\t\tinput = input.replace(/'/g, '\\\\\\'');\n\t\treturn `'${input}'`;\n\t})(input, options, pad);\n}\n"],"mappings":"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","names":["preserveConsecutiveUppercase","stringify","input","options","pad"]}