{"version":3,"sources":["../src/errors/fetchError.ts"],"names":[],"mappings":";AAAA,IAAqB,aAArB,MAAqB,oBAAoD,MAAM;AAAA;AAAA,EAE7E;AAAA;AAAA,EAGA;AAAA;AAAA,EAGA;AAAA;AAAA,EAGA;AAAA,EAEA,YAAY,QAAgB,MAAY,SAAkB,KAAe;AACvE,UAAM,IAAI,UAAU;AAEpB,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,OAAO;AACZ,SAAK,UAAU;AACf,SAAK,MAAM;AAMX,WAAO,eAAe,MAAM,YAAW,SAAS;AAAA,EAClD;AACF","sourcesContent":["export default class FetchError<Status = number, Data = unknown> extends Error {\n  /** HTTP Status */\n  status: Status;\n\n  /** The content of the response. */\n  data: Data;\n\n  /** The Headers of the response. */\n  headers: Headers;\n\n  /** The raw `Response` object. */\n  res: Response;\n\n  constructor(status: Status, data: Data, headers: Headers, res: Response) {\n    super(res.statusText);\n\n    this.name = 'FetchError';\n    this.status = status;\n    this.data = data;\n    this.headers = headers;\n    this.res = res;\n\n    // We could fix this by updating our target to ES2015 but because we support exporting to CJS\n    // we can't.\n    //\n    // https://www.dannyguo.com/blog/how-to-fix-instanceof-not-working-for-custom-errors-in-typescript/\n    Object.setPrototypeOf(this, FetchError.prototype);\n  }\n}\n"]}